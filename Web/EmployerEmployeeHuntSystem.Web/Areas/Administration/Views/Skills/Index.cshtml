@model IEnumerable<EmployerEmployeeHuntSystem.Web.ViewModels.Skills.SkillViewModel>
@using EmployerEmployeeHuntSystem.Web.ViewModels.Skills
@using EmployerEmployeeHuntSystem.Constants
@using GridMvc.Html
@using GridMvc.Sorting

@{
    ViewBag.Title = "All Skills";
}

<h3 class="text-center">All Skills | <button class="btn btn-sm btn-success" data-toggle="modal" data-target="#add-skill-modal">Add New Skill</button></h3>

@Html.Grid(Model).Columns(columns =>
{
columns.Add(o => o.Id)
       .Titled("Id");

columns.Add(o => o.Name);

columns.Add()
    .Titled("Actions")
    .Encoded(false)
    .Sanitized(false)
    .RenderValueAs(d =>
    @<span>
        @Html.ActionLink("Edit", "Edit", new { id = d.Id }, new { @class = "btn btn-sm btn-default" }) |
        @Html.ActionLink("Delete", "Delete", new { id = d.Id }, new { @class = "btn btn-sm btn-danger" })
    </span>);

}).WithPaging(GlobalConstants.DefaultPageSize).Sortable().Filterable().WithMultipleFilters()

<div class="modal" id="add-skill-modal">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title">Add New Skill</h4>
            </div>
            <div class="modal-body">
                @using (Html.BeginForm("Add", "Skills", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    @Html.EditorFor(x => new SkillViewModel().Name)
                    <button class="btn btn-primary">Add</button>
                }
            </div>
        </div>
    </div>
</div>