@model EmployerEmployeeHuntSystem.Web.Areas.Headhunters.ViewModels.JobOffers.JobOffersListAllViewModel
@using EmployerEmployeeHuntSystem.Constants
@using GridMvc.Html
@using GridMvc.Sorting
@using Microsoft.AspNet.Identity;
@{
    ViewBag.Title = "All Job Offers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3 class="text-center">All Job Offers</h3>
@*<hr />
    @Html.DisplayFor(x => Model.JobOffers, new { IsHeadhunter = true })

    @section scripts {
        <script>
            console.log('here')
            jqueryElementManipulation.toggleClassOfTableRow('expand', 'hidden');
        </script>
    }*@

@Html.Grid(Model.JobOffers).Columns(columns =>
{
    columns.Add(o => o.Id)
           .Titled("Id");

    columns.Add(o => o.RegistrationDate)
        .SortInitialDirection(GridSortDirection.Descending)
        .Format("{0:dd/MM/yyyy}");

    columns.Add(o => o.MinimumCandidatesCount);

    columns.Add(o => o.CandidatesCount);

    columns.Add(o => o.Headhunter);

    columns.Add(o => o.IsActive);

    columns.Add(o => o.RequiredSkills)
        .Encoded(false)
        .Sanitized(false)
        .RenderValueAs(d =>
        @<span>
            @string.Join(", ", d.RequiredSkills.Select(s => s.Name))
        </span>)
        .Sortable(false)
        .Filterable(false);

columns.Add()
    .Titled("Actions")
    .Encoded(false)
    .Sanitized(false)
    .RenderValueAs(d =>
    @<div>
        <button type="button" class="btn btn-info btn-sm" data-toggle="modal" data-target="#modal-@d.Id">Actions</button>
    </div>);

}).WithPaging(GlobalConstants.DefaultPageSize).Sortable().Filterable().WithMultipleFilters()

@foreach (var item in Model.JobOffers)
{
    <div id="modal-@item.Id" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Actions:</h4>
                </div>
                <div class="modal-body">
                    @if (item.IsActive)
                    {
                        if (string.IsNullOrWhiteSpace(item.HeadhunterId) || item.HeadhunterId == User.Identity.GetUserId())
                        {
                            @Html.ActionLink("Set As Inactive", "SetInactive", new { id = item.Id }) @:|

                            @Html.ActionLink("Search For Candidates", "CandidatesForJobOffer", "Developers", new { id = item.Id }, null) @:|

                            @Html.ActionLink("Delete", "Delete", new { id = item.Id }) @:|
                        }
                    }
                    else
                    {
                        @Html.ActionLink("Set As Active", "SetActive", new { id = item.Id }) @:|
                    }

                    @Html.ActionLink("Details", "Details", new { id = item.Id, area = string.Empty })
                    <br />
                    <br />
                </div>
            </div>
        </div>
    </div>
}